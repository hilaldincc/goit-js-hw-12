{"version":3,"file":"page-2.js","sources":["../src/js/api.js","../src/js/markup.js","../src/js/main.js"],"sourcesContent":["// Axios kütüphanesini içe aktar (API istekleri için kullanılır)\nimport axios from 'axios';\n\n// Pixabay API anahtarın (kişisel anahtar)\nconst API_KEY = '47647589-b8e3be9abf9fcf69ccbc2b85f';\n// Pixabay API'nin temel URL'si\nconst BASE_URL = 'https://pixabay.com/api/';\n// Her sayfada kaç görsel yükleneceğini belirt (ödevde 40 isteniyor)\nconst PER_PAGE = 40;\n\n// Asenkron görsel getirme fonksiyonu\nexport async function fetchImages(query, page = 1) {\n  try {\n    // Axios ile GET isteği gönderilir, sorgu parametreleri eklenir\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY, // API anahtarı\n        q: query, // Kullanıcının aradığı kelime\n        image_type: 'photo', // Sadece fotoğraflar getirilsin\n        orientation: 'horizontal', // Yatay görseller\n        safesearch: true, // Güvenli arama\n        per_page: PER_PAGE, // Sayfa başına görsel sayısı\n        page: page, // Şu anki sayfa numarası\n      },\n    });\n\n    // API'den gelen verileri döndür (hits ve totalHits dahil)\n    return response.data;\n  } catch (error) {\n    // Hata varsa konsola yaz ve uygulamaya bilgi ver\n    console.error('API error:', error);\n    throw new Error('Failed to fetch images');\n  }\n}\n","// Görsel verilerini HTML formatında galeri kartlarına çeviren fonksiyon\nexport function createGalleryMarkup(images) {\n  return images\n    .map(image => {\n      // Her bir görsel için <a> etiketi içinde resim ve bilgileri döndür\n      return `\n          <a href=\"${image.largeImageURL}\">\n            <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n            \n            <div class=\"card-info\">\n              <div class=\"info-block\">\n                <p class=\"label\">Likes</p>\n                <p class=\"value\">${image.likes}</p>\n              </div>\n              <div class=\"info-block\">\n                <p class=\"label\">Views</p>\n                <p class=\"value\">${image.views}</p>\n              </div>\n              <div class=\"info-block\">\n                <p class=\"label\">Comments</p>\n                <p class=\"value\">${image.comments}</p>\n              </div>\n              <div class=\"info-block\">\n                <p class=\"label\">Downloads</p>\n                <p class=\"value\">${image.downloads}</p>\n              </div>\n            </div>\n          </a>\n        `;\n    })\n    .join(''); // Tüm görsellerin HTML'lerini birleştirip string olarak döndür\n}\n","// API'den veri çeken fonksiyon\nimport { fetchImages } from './api';\n// Görsel kartları HTML'e dönüştüren fonksiyon\nimport { createGalleryMarkup } from './markup';\n\n// Işık kutusu (lightbox) ile büyük görsel gösterimi için eklenti\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Uyarı ve bilgi mesajları için iziToast kütüphanesi\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// DOM öğelerini seçiyoruz\nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\nconst loader = document.querySelector('.loader');\n\n// Uygulama durumu için değişkenler\nlet searchQuery = '';\nlet currentPage = 1;\nlet totalHits = 0;\nlet lightbox;\n\n// Form gönderildiğinde çalışacak olay\nform.addEventListener('submit', async event => {\n  event.preventDefault(); // Sayfa yenilenmesini engelle\n\n  // Kullanıcının yazdığı arama terimini al\n  searchQuery = form.elements.searchQuery.value.trim();\n\n  // Eğer boşsa uyarı göster\n  if (!searchQuery) {\n    iziToast.warning({\n      title: 'Oops!',\n      message: 'Please enter a search term!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  // Input'u geçici olarak devre dışı bırak ve görsel olarak pasifleştir\n  form.elements.searchQuery.disabled = true;\n  form.elements.searchQuery.style.opacity = '0.5';\n\n  // Önceki sonuçları temizle, sayfayı sıfırla, butonu ve loader'ı ayarla\n  gallery.innerHTML = '';\n  currentPage = 1;\n  loadMoreBtn.classList.add('hidden');\n  loader.classList.remove('hidden');\n\n  try {\n    // API'den sonuçları çek\n    const data = await fetchImages(searchQuery, currentPage);\n    totalHits = data.totalHits;\n\n    // Eğer hiç sonuç yoksa uyarı göster\n    if (data.hits.length === 0) {\n      iziToast.error({\n        message: 'No images found. Try another keyword.',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    // Galeri HTML'ini oluşturup ekle\n    const markup = createGalleryMarkup(data.hits);\n    gallery.innerHTML = markup;\n\n    // Lightbox başlat veya yenile\n    if (!lightbox) {\n      lightbox = new SimpleLightbox('.gallery a');\n    } else {\n      lightbox.refresh();\n    }\n\n    // Eğer toplam sonuç sayısı 40'tan fazlaysa \"Load More\" butonunu göster\n    if (totalHits > 40) {\n      loadMoreBtn.classList.remove('hidden');\n    }\n  } catch (error) {\n    // API'den veri alınamadıysa uyarı ver\n    iziToast.error({\n      message: 'Error fetching images',\n      position: 'topRight',\n    });\n  } finally {\n    // Loader'ı gizle ve input'u tekrar aktif hale getir\n    loader.classList.add('hidden');\n    form.elements.searchQuery.disabled = false;\n    form.elements.searchQuery.style.opacity = '1';\n    form.reset(); // Input'u temizle\n  }\n});\n\n// \"Load More\" butonuna tıklandığında\nloadMoreBtn.addEventListener('click', async () => {\n  currentPage += 1; // Sayfayı artır\n  loader.classList.remove('hidden'); // Yükleniyor göstergesi\n\n  try {\n    // Yeni sayfa verilerini al\n    const data = await fetchImages(searchQuery, currentPage);\n    const markup = createGalleryMarkup(data.hits);\n    gallery.insertAdjacentHTML('beforeend', markup); // Yeni görselleri ekle\n\n    lightbox.refresh(); // Yeni öğeler için lightbox güncelle\n\n    // Son sayfaya ulaşıldıysa \"Load More\" butonunu gizle ve bilgi ver\n    const totalPages = Math.ceil(totalHits / 40);\n    if (currentPage >= totalPages) {\n      loadMoreBtn.classList.add('hidden');\n      iziToast.info({\n        message: \"You've reached the end of the results.\",\n        position: 'topRight',\n      });\n    }\n\n    scrollToNewContent(); // Sayfa aşağı kaydırılsın\n  } catch (error) {\n    iziToast.error({\n      message: 'Error loading more images',\n      position: 'topRight',\n    });\n  } finally {\n    loader.classList.add('hidden');\n  }\n});\n\n// Yeni içerik geldikçe sayfayı yumuşakça aşağı kaydırır\nfunction scrollToNewContent() {\n  const { height: cardHeight } =\n    gallery.firstElementChild.getBoundingClientRect();\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["API_KEY","BASE_URL","PER_PAGE","fetchImages","query","page","axios","error","createGalleryMarkup","images","image","form","gallery","loadMoreBtn","loader","searchQuery","currentPage","totalHits","lightbox","event","iziToast","data","markup","SimpleLightbox","totalPages","scrollToNewContent","cardHeight"],"mappings":"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"}